package calibracion;




import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author d.kuczerawy
 */
public final class VentPrincipal extends javax.swing.JFrame {
    
    
    /**
     * Creates new form VentPrincipal
     */
    public VentPrincipal() {
        initComponents();
        conectarBaseDatos();
        manejoTablas = new ManejoTablas(conexion);
        log = new Log();
        
    }
    
    
 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pestañaTabbedPane = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        codigoLbl = new javax.swing.JLabel();
        codigoTF = new javax.swing.JTextField();
        descripcionLbl = new javax.swing.JLabel();
        descripcionTF = new javax.swing.JTextField();
        clasificacionLbl = new javax.swing.JLabel();
        clasificacionTF = new javax.swing.JTextField();
        marcaLbl = new javax.swing.JLabel();
        rangoLbl = new javax.swing.JLabel();
        resolucionLbl = new javax.swing.JLabel();
        marcaTF = new javax.swing.JTextField();
        rangoTF = new javax.swing.JTextField();
        resolucionTF = new javax.swing.JTextField();
        sectorLbl = new javax.swing.JLabel();
        usuarioLbl = new javax.swing.JLabel();
        fechaAltaLbl = new javax.swing.JLabel();
        sectorTF = new javax.swing.JTextField();
        usuarioTF = new javax.swing.JTextField();
        fechaAltaTF = new javax.swing.JTextField();
        nuevoButton = new javax.swing.JButton();
        guardarButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        numSerieTF = new javax.swing.JTextField();
        marcaLbl2 = new javax.swing.JLabel();
        modeloTF = new javax.swing.JTextField();
        jPanelBsucar = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        buscarTextField = new javax.swing.JTextField();
        buscarButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        bajaCheckBox = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        codigoLbl1 = new javax.swing.JLabel();
        descripcionLbl1 = new javax.swing.JLabel();
        clasificacionLbl1 = new javax.swing.JLabel();
        marcaLbl1 = new javax.swing.JLabel();
        rangoLbl1 = new javax.swing.JLabel();
        resolucionLbl1 = new javax.swing.JLabel();
        sectorLbl1 = new javax.swing.JLabel();
        usuarioLbl1 = new javax.swing.JLabel();
        fechaAltaLbl1 = new javax.swing.JLabel();
        codigoConfMetrTF = new javax.swing.JTextField();
        numInformeTF = new javax.swing.JTextField();
        instruccionConfTF = new javax.swing.JTextField();
        criterioAcepTF = new javax.swing.JTextField();
        resultadoTF = new javax.swing.JTextField();
        intervinoTF = new javax.swing.JTextField();
        fechaCertifTF = new javax.swing.JTextField();
        fechaProxCertTF = new javax.swing.JTextField();
        frecuenciaTF = new javax.swing.JTextField();
        guardarVerifButton = new javax.swing.JButton();
        jPanelInstVencidos = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        refreshButton = new javax.swing.JButton();
        jPanelBaja = new javax.swing.JPanel();
        codigoLbl2 = new javax.swing.JLabel();
        codigoBajaTF = new javax.swing.JTextField();
        fechaAltaLbl2 = new javax.swing.JLabel();
        fechaBajaTF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        bajaCheckbox = new javax.swing.JCheckBox();
        confirmarBajaButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        incertCodigoTF = new javax.swing.JTextField();
        abrirButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fechaLabel = new javax.swing.JLabel();
        usuarioLogedLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        cerrarSesionMenuItem = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        cambiarPassMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Establecimientos Conte S.A. Sistema de Calibración");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        pestañaTabbedPane.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        pestañaTabbedPane.setToolTipText("");
        pestañaTabbedPane.setMinimumSize(new java.awt.Dimension(750, 400));
        pestañaTabbedPane.setPreferredSize(new java.awt.Dimension(0, 0));

        jPanel2.setMinimumSize(new java.awt.Dimension(700, 500));
        jPanel2.setPreferredSize(new java.awt.Dimension(729, 506));

        codigoLbl.setText("Codigo");

        descripcionLbl.setText("Descripción");

        clasificacionLbl.setText("Clasificación");

        marcaLbl.setText("Marca");

        rangoLbl.setText("Rango");

        resolucionLbl.setText("Resolución");

        sectorLbl.setText("Sector");

        usuarioLbl.setText("Usuario");

        fechaAltaLbl.setText("Fecha de alta");

        fechaAltaTF.setText(fechaDeHoy());

        nuevoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fotos/logosBoton/boton nuevo.png"))); // NOI18N
        nuevoButton.setText("Nuevo");
        nuevoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoBActionPerformed(evt);
            }
        });

        guardarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fotos/logosBoton/boton guardar.png"))); // NOI18N
        guardarButton.setText("Guardar");
        guardarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarBActionPerformed(evt);
            }
        });

        jLabel6.setText("Nº de Serie");

        marcaLbl2.setText("Modelo");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(guardarButton)
                .addGap(36, 36, 36)
                .addComponent(nuevoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(numSerieTF, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sectorLbl)
                            .addComponent(usuarioLbl)
                            .addComponent(fechaAltaLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sectorTF, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usuarioTF, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fechaAltaTF, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(codigoLbl)
                                .addGap(202, 202, 202)
                                .addComponent(codigoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(marcaLbl2)
                                .addGap(201, 201, 201)
                                .addComponent(modeloTF, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(descripcionLbl)
                                    .addComponent(clasificacionLbl))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(descripcionTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(clasificacionTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(marcaLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(marcaTF, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(rangoLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rangoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(resolucionLbl)
                                .addGap(184, 184, 184)
                                .addComponent(resolucionTF, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(217, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codigoLbl))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(numSerieTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(descripcionLbl)
                    .addComponent(descripcionTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clasificacionLbl)
                    .addComponent(clasificacionTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(marcaTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(marcaLbl))
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modeloTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(marcaLbl2))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rangoLbl)
                    .addComponent(rangoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resolucionLbl)
                    .addComponent(resolucionTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sectorLbl)
                    .addComponent(sectorTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usuarioLbl)
                    .addComponent(usuarioTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fechaAltaLbl)
                    .addComponent(fechaAltaTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardarButton)
                    .addComponent(nuevoButton))
                .addGap(45, 45, 45))
        );

        pestañaTabbedPane.addTab("Nuevo", jPanel2);

        jLabel1.setText("Insertar código a buscar:");

        buscarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fotos/logosBoton/boton buscar.png"))); // NOI18N
        buscarButton.setText("Buscar");
        buscarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarButtonActionPerformed(evt);
            }
        });

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Descripcion", "Clasificación", "Marca", "Rango", "Resolución", "Sector", "Usuario", "Fecha_alta", "Inst. de Confirmación", "Criterio de aceptación", "Resultado de ultima confirmación", "Intervino", "Fecha de ultima certificación externa", "Fecha de proxima certificación", "Frecuencia de certificación", "Fecha de proxima verificación", "Vencimiento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(jTable1);

        bajaCheckBox.setText("Dado de baja");
        bajaCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bajaCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBsucarLayout = new javax.swing.GroupLayout(jPanelBsucar);
        jPanelBsucar.setLayout(jPanelBsucarLayout);
        jPanelBsucarLayout.setHorizontalGroup(
            jPanelBsucarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBsucarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBsucarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buscarTextField)
                    .addGroup(jPanelBsucarLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelBsucarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelBsucarLayout.createSequentialGroup()
                        .addComponent(bajaCheckBox)
                        .addGap(20, 20, 20))
                    .addGroup(jPanelBsucarLayout.createSequentialGroup()
                        .addComponent(buscarButton, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                        .addContainerGap())))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 751, Short.MAX_VALUE)
        );
        jPanelBsucarLayout.setVerticalGroup(
            jPanelBsucarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBsucarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBsucarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(bajaCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBsucarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscarTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscarButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE))
        );

        pestañaTabbedPane.addTab("Buscar", jPanelBsucar);

        codigoLbl1.setText("Codigo");

        descripcionLbl1.setText("Número de informe");

        clasificacionLbl1.setText("Instrucción de calibración");

        marcaLbl1.setText("Criterio de aceptación");

        rangoLbl1.setText("Resultado de certificación");

        resolucionLbl1.setText("Intervino");

        sectorLbl1.setText("Fecha de certificación");

        usuarioLbl1.setText("Fecha de prox. certificación");

        fechaAltaLbl1.setText("Frecuencia de certificación");

        guardarVerifButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fotos/logosBoton/boton guardar.png"))); // NOI18N
        guardarVerifButton.setText("Guardar");
        guardarVerifButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarVerifButtonguardarBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(guardarVerifButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(codigoLbl1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(descripcionLbl1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clasificacionLbl1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(marcaLbl1)
                                    .addComponent(rangoLbl1)
                                    .addComponent(sectorLbl1)
                                    .addComponent(usuarioLbl1)
                                    .addComponent(fechaAltaLbl1)
                                    .addComponent(resolucionLbl1))))
                        .addGap(77, 77, 77)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(codigoConfMetrTF)
                            .addComponent(numInformeTF)
                            .addComponent(instruccionConfTF)
                            .addComponent(criterioAcepTF)
                            .addComponent(resultadoTF)
                            .addComponent(intervinoTF)
                            .addComponent(fechaCertifTF)
                            .addComponent(fechaProxCertTF)
                            .addComponent(frecuenciaTF, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigoLbl1)
                    .addComponent(codigoConfMetrTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(descripcionLbl1)
                    .addComponent(numInformeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clasificacionLbl1)
                    .addComponent(instruccionConfTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(marcaLbl1)
                    .addComponent(criterioAcepTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rangoLbl1)
                    .addComponent(resultadoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resolucionLbl1)
                    .addComponent(intervinoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sectorLbl1)
                    .addComponent(fechaCertifTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usuarioLbl1)
                    .addComponent(fechaProxCertTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fechaAltaLbl1)
                    .addComponent(frecuenciaTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(guardarVerifButton)
                .addGap(31, 31, 31))
        );

        pestañaTabbedPane.addTab("Insertar confirmacion metrologica", jPanel1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Descripción", "Marca", "Rango", "Intervino", "Resultado_ult_confirmación", "Fecha_ult_cert_ext", "Fecha_prox_cert", "Vencimiento"
            }
        ));
        jTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(jTable2);

        refreshButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fotos/logosBoton/boton refresh.png"))); // NOI18N
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelInstVencidosLayout = new javax.swing.GroupLayout(jPanelInstVencidos);
        jPanelInstVencidos.setLayout(jPanelInstVencidosLayout);
        jPanelInstVencidosLayout.setHorizontalGroup(
            jPanelInstVencidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInstVencidosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(refreshButton)
                .addContainerGap())
            .addGroup(jPanelInstVencidosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 735, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelInstVencidosLayout.setVerticalGroup(
            jPanelInstVencidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInstVencidosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(refreshButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pestañaTabbedPane.addTab("Instrumentos por vencerse", jPanelInstVencidos);

        codigoLbl2.setText("Codigo");

        fechaAltaLbl2.setText("Fecha de baja");

        fechaBajaTF.setText(fechaDeHoy());

        jLabel4.setText("Dar de baja");

        bajaCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bajaCheckboxActionPerformed(evt);
            }
        });

        confirmarBajaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fotos/logosBoton/boton check.png"))); // NOI18N
        confirmarBajaButton.setText("Confirmar");
        confirmarBajaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarBajaButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBajaLayout = new javax.swing.GroupLayout(jPanelBaja);
        jPanelBaja.setLayout(jPanelBajaLayout);
        jPanelBajaLayout.setHorizontalGroup(
            jPanelBajaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBajaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBajaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fechaAltaLbl2)
                    .addComponent(codigoLbl2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                .addGroup(jPanelBajaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelBajaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(codigoBajaTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(fechaBajaTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(confirmarBajaButton, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(bajaCheckbox))
                .addGap(81, 81, 81))
        );
        jPanelBajaLayout.setVerticalGroup(
            jPanelBajaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBajaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBajaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigoBajaTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codigoLbl2))
                .addGap(18, 18, 18)
                .addGroup(jPanelBajaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fechaAltaLbl2)
                    .addComponent(fechaBajaTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelBajaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(bajaCheckbox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 305, Short.MAX_VALUE)
                .addComponent(confirmarBajaButton)
                .addContainerGap())
        );

        pestañaTabbedPane.addTab("Dar de baja", jPanelBaja);

        jLabel5.setText("Codigo de calibre");

        abrirButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fotos/logosBoton/Abrir.png"))); // NOI18N
        abrirButton.setText("Abrir");
        abrirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(55, 55, 55)
                .addComponent(incertCodigoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(344, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(abrirButton)
                .addGap(82, 82, 82))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(incertCodigoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 358, Short.MAX_VALUE)
                .addComponent(abrirButton)
                .addContainerGap())
        );

        pestañaTabbedPane.addTab("Abrir Incert", jPanel3);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fotos/FIRMA.jpg"))); // NOI18N
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 28)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Programa de Calibración");

        fechaLabel.setText(fechaDeHoy());

        usuarioLogedLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jMenu1.setText("Archivo");

        cerrarSesionMenuItem.setText("Cerrar sesión");
        cerrarSesionMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarSesionMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(cerrarSesionMenuItem);

        jMenuItem1.setText("Salir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirMenuActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Editar");

        cambiarPassMenuItem.setText("Cambiar contraseña");
        cambiarPassMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cambiarPassMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(cambiarPassMenuItem);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                                .addComponent(usuarioLogedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(fechaLabel))))
                    .addComponent(pestañaTabbedPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fechaLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(usuarioLogedLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pestañaTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE)
                .addContainerGap())
        );

        pestañaTabbedPane.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            sentencia.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al cerrar la base de datos" + e);
        }
        cerrar(this); //cerrar aplicacion desde la X
    }//GEN-LAST:event_formWindowClosing

    private void buscarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarButtonActionPerformed
        String codigo;
        codigo = buscarTextField.getText()+"%";
        if(baja)
            sql = "SELECT Calibracion.*, Baja.Fecha_baja FROM Calibracion JOIN Baja ON Calibracion.Código = Baja.Código WHERE Código LIKE ?";
        else
            sql = "SELECT Calibracion.[Código],Calibracion.[Num_serie], Calibracion.[Descripción], Calibracion.[Clasificación], Calibracion.[Marca], Calibracion.[Modelo], Calibracion.[Rango], " 
                + "Calibracion.[Resolución], Calibracion.[Sector], Calibracion.[Usuario], Calibracion.[Fecha_alta], V.[Num_informe], " 
                + "V.[Inst_calibracion], V.[Criterio_aceptación], V.[Resultado_ult_confirmación], " 
                + "V.[Intervino], V.[Fecha_ultima_cert_ext], V.[Fecha_prox_cert], " 
                + "V.[Frecuencia_cert], V.[Vencimiento] " 
                + "FROM Verificación AS V RIGHT JOIN Calibracion ON V.[Código] = Calibracion.[Código] WHERE Código LIKE ? AND "
                + "Calibracion.[Código] NOT IN (SELECT Baja.[Código] FROM Baja) AND V.fecha_prox_cert IN (SELECT MAX(fecha_prox_cert) FROM Verificación AS V1 WHERE V1.Código = calibracion.Código)"
                + "GROUP BY  Calibracion.Código, Calibracion.Descripción, Calibracion.Clasificación, Calibracion.Marca, Calibracion.Modelo, Calibracion.Rango, Calibracion.Resolución, Calibracion.Sector, Calibracion.Usuario, Calibracion.Fecha_alta, V.Num_informe, V.Inst_calibracion, V.Criterio_aceptación, V.Resultado_ult_confirmación, V.Intervino, V.Fecha_ultima_cert_ext, V.Fecha_prox_cert, V.Frecuencia_cert, V.Vencimiento;";    
        PreparedStatement pstm;
        try {
            pstm = conexion.prepareStatement(sql);
            if(codigo.equals("")) {
            } else {
                pstm.setString(1, codigo);
            }
            ResultSet res = pstm.executeQuery();
            if(baja)
                jTable1 = manejoTablas.agregarTuplasATabla(res,jTable1,BAJA);
            else
                jTable1 = manejoTablas.agregarTuplasATabla(res,jTable1,BUSCAR);
            jTable1 = manejoTablas.resizeTable(jTable1);
            
        } catch (SQLException ex) {
            Logger.getLogger(VentPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buscarButtonActionPerformed

private boolean isEmpty(String text){
        return text.equals("");
    }
    
    private String fechaDeHoy(){
        Calendar c = new GregorianCalendar();
        String dia;
        String mes;
        String año = Integer.toString(c.get(Calendar.YEAR));
        String fecha;
        
        if(c.get(Calendar.DATE)<10)
            dia = "0"+Integer.toString(c.get(Calendar.DATE));
        else
            dia = Integer.toString(c.get(Calendar.DATE));
        if(c.get(Calendar.MONTH)<10)
            mes = "0"+Integer.toString(c.get(Calendar.MONTH)+1);
        else
            mes = Integer.toString(c.get(Calendar.MONTH)+1);
        fecha = dia+"/"+mes+"/"+año;
        return fecha;
    }
    
    
    private void salirMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirMenuActionPerformed
        cerrar(this);
    }//GEN-LAST:event_salirMenuActionPerformed

    private void cambiarPassMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cambiarPassMenuItemActionPerformed
        cambiarPass(this);
    }//GEN-LAST:event_cambiarPassMenuItemActionPerformed

    private void cerrarSesionMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarSesionMenuItemActionPerformed
        pestañaTabbedPane.setVisible(false);
        usuarioLogedLabel.setText("");
        abrirLogin();
    }//GEN-LAST:event_cerrarSesionMenuItemActionPerformed

    private void bajaCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bajaCheckBoxActionPerformed
        baja = !baja;
    }//GEN-LAST:event_bajaCheckBoxActionPerformed

    
    
    private void guardarVerifButtonguardarBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarVerifButtonguardarBActionPerformed
        if("l".equals(nivel)){
            JOptionPane.showMessageDialog(null, "Usuario no tiene privilegios para ingresar datos.");
            return;
        }
        PreparedStatement pstm;
        ResultSet res;
        sql = "SELECT Código FROM Calibracion WHERE Código ='"+codigoConfMetrTF.getText()+"'";
        try{
            pstm = conexion.prepareStatement(sql);
            res = pstm.executeQuery();
            if(!res.next()){
                JOptionPane.showMessageDialog(null, "El código del instrumento no existe.");
                return;
            }
        }catch (SQLException ex) {
                Logger.getLogger(VentPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        
        }
        sql = "SELECT 1 FROM Calibracion WHERE Calibracion.Código ='"+codigoConfMetrTF.getText()+"' AND" 
                 +" NOT EXISTS(SELECT 1 FROM Verificación WHERE Calibracion.Código ='"+codigoConfMetrTF.getText() +"' AND Num_informe='"+numInformeTF.getText()+"')";
        try {
            pstm = conexion.prepareStatement(sql);
            res = pstm.executeQuery();
            SimpleDateFormat ddmmyyyyFormat = new SimpleDateFormat("dd/MM/yyyy");
            Timestamp fechaCertif;
            fechaCertif =  new Timestamp(ddmmyyyyFormat.parse(fechaCertifTF.getText()).getTime());
            Timestamp fechaProxCert;
            fechaProxCert =  new Timestamp(ddmmyyyyFormat.parse(fechaProxCertTF.getText()).getTime());
            fechaCertif.setYear(cuatroCifrasAño(fechaCertif.getYear()));
            fechaProxCert.setYear(cuatroCifrasAño(fechaProxCert.getYear()));
            System.out.println(fechaProxCert.getYear());
            if(res.next()){
                if(fechaCertifTF.getText().equals("NULL") && fechaCertifTF.getText().equals("NULL"))
                
                
                sql = "INSERT INTO Verificación(Código,Num_informe,Inst_calibracion,Criterio_aceptación,Resultado_ult_confirmación,Intervino"
                + ",Fecha_ultima_cert_ext,Fecha_prox_cert,Frecuencia_cert) VALUES('"+codigoConfMetrTF.getText()+"','"+numInformeTF.getText()+"','"
                + instruccionConfTF.getText()+"','"+criterioAcepTF.getText()+"','"+resultadoTF.getText()+"','"+intervinoTF.getText()+"','"+fechaCertif+"','"+fechaProxCert+"','"+frecuenciaTF.getText()+"')";
        try {
                sentencia.executeUpdate(sql);
                log.logVerif(codigoConfMetrTF.getText(), numInformeTF.getText(), usuario);
                conexion.commit();
                JOptionPane.showMessageDialog(null, "Verificación almacenada de forma exitosa.");
            } catch (SQLException ex) {
                if(ex.getErrorCode() == -3407) 
                    JOptionPane.showMessageDialog(null, "Fecha invalida. Ingrese fecha con formato dd/mm/aaaa");
        }  
            }else{
                JOptionPane.showMessageDialog(null, "El numero de informe está repetido");
            }
            
        } catch (SQLException | ParseException ex) {
            Logger.getLogger(VentPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
                
            
    }//GEN-LAST:event_guardarVerifButtonguardarBActionPerformed
    
    
    
    private int cuatroCifrasAño(int año){
        System.out.println(año);
        if(año<0){
                if(año>=-1801){
                    año += 1900;
                }else{
                    año += 2000;
                }
            }
        return año;
    }
    
    private void confirmarBajaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarBajaButtonActionPerformed
        if("l".equals(nivel)){
            JOptionPane.showMessageDialog(null, "Usuario no tiene privilegios para ingresar datos.");
            return;
        }
        sql =  "SELECT C.Código From Calibracion AS C WHERE C.Código ='"+codigoBajaTF.getText()+"';";
        PreparedStatement pstm;
        try{
            pstm = conexion.prepareStatement(sql);
            ResultSet res = pstm.executeQuery();
            if(!res.next()){
                JOptionPane.showMessageDialog(null, "El código del intrumento no existe.");
                return;
            }
            
        }catch(SQLException ex){
            Logger.getLogger(VentPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(bajaCheck){
            try{
                sql = "SELECT * FROM Baja AS B WHERE B.Código ='"+codigoBajaTF.getText()+"' AND B.dado_baja;";
                SimpleDateFormat ddmmyyyyFormat = new SimpleDateFormat("dd/MM/yyyy");
                
                try{
                    pstm = conexion.prepareStatement(sql);
                    ResultSet res = pstm.executeQuery();
                    if(res.next()){
                        JOptionPane.showMessageDialog(null, "El instrumento ya esta dado de baja.");
                        return;
                    }
                if(fechaBajaTF.getText().equals("NULL")){
                    
                    sql = "INSERT INTO Baja(Código,dado_baja,Fecha_baja) VALUES('"+codigoBajaTF.getText()+"','TRUE',NULL);";
                }else{
                    Timestamp fechaBaja;
                    fechaBaja =  new Timestamp(ddmmyyyyFormat.parse(fechaBajaTF.getText()).getTime());
                    fechaBaja.setYear(cuatroCifrasAño(fechaBaja.getYear())); 
                    sql = "INSERT INTO Baja(Código,dado_baja,Fecha_baja) VALUES('"+codigoBajaTF.getText()+"','TRUE','"+fechaBaja+"');";
                }
                
                    sentencia.executeUpdate(sql);
                    JOptionPane.showMessageDialog(null, "El instrumento nº "+codigoBajaTF.getText()+" fue dado de baja.");
                    log.logDelete(codigoBajaTF.getText(), usuario, true);
                }catch(SQLException ex){
                    
                    if(ex.getErrorCode() == -3407)
                        JOptionPane.showMessageDialog(null, "Fecha invalida. Ingrese fecha con formato dd/mm/aaaa");
                    else 
                        Logger.getLogger(VentPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }catch(ParseException ex){
                JOptionPane.showMessageDialog(null, "Fecha invalida. Ingrese fecha con formato dd/mm/aaaa");
                
            }
        }else{
            sql = "SELECT * FROM Baja AS B WHERE B.Código ='"+codigoBajaTF.getText()+"' AND B.dado_baja;";
            try{
                pstm = conexion.prepareStatement(sql);
                ResultSet res = pstm.executeQuery();
                if(!res.next()){
                    JOptionPane.showMessageDialog(null, "El instrumento no se encuentra dado de baja.");
                    return;
                }
            sql = "DELETE * FROM Baja AS B WHERE B.Código ='"+codigoBajaTF.getText()+"';";
            sentencia.executeUpdate(sql);
            log.logDelete(codigoBajaTF.getText(), usuario, false);
            JOptionPane.showMessageDialog(null, "El instrumento nº "+codigoBajaTF.getText()+" fue removido de la lista de baja.");
            }catch(SQLException ex){
                Logger.getLogger(VentPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
            
    }//GEN-LAST:event_confirmarBajaButtonActionPerformed

    private void bajaCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bajaCheckboxActionPerformed
        // TODO add your handling code here:
        bajaCheck=!bajaCheck;
    }//GEN-LAST:event_bajaCheckboxActionPerformed

    private void abrirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirButtonActionPerformed
        // TODO add your handling code here:
        
        AbrirExcel excel = new AbrirExcel();
        excel.start();
        try {
            excel.abrir(incertCodigoTF.getText(),usuario);
        } catch (IOException ex) {
            Logger.getLogger(VentPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_abrirButtonActionPerformed

    private void guardarBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarBActionPerformed
        if("l".equals(nivel)){
            JOptionPane.showMessageDialog(null, "Usuario no tiene privilegios para ingresar datos.");
            return;
        }
        Calendar cal = Calendar.getInstance();
        cal.add(Calendar.DATE, 1);
        codigoInst = codigoTF.getText();
        descripcionInst = descripcionTF.getText();
        clasificacionInst = clasificacionTF.getText();
        marcaInst = marcaTF.getText();
        rangoInst = rangoTF.getText();
        resolucionInst = resolucionTF.getText();
        sectorInst = sectorTF.getText();
        usuarioInst = usuarioTF.getText();
        if(isEmpty(codigoInst) || isEmpty(numSerieTF.getText()) || isEmpty(modeloTF.getText()) || isEmpty(descripcionInst) || isEmpty(clasificacionInst) || isEmpty(marcaInst) || isEmpty(rangoInst) ||
            isEmpty(resolucionInst) || isEmpty(sectorInst) || isEmpty(usuarioInst) || isEmpty(fechaAltaTF.getText()))
        JOptionPane.showMessageDialog(null, "Campo vacío.", "Error", 2, null);
        else {
            try{
                SimpleDateFormat ddmmyyyyFormat = new SimpleDateFormat("dd/MM/yyyy");
                Timestamp ddmmyyyy;
                ddmmyyyy =  new Timestamp(ddmmyyyyFormat.parse(fechaAltaTF.getText()).getTime());
                if(fechaAltaTF.getText().equals("NULL")){
                    sql = "INSERT INTO Calibracion(Código,Num_serie,Descripción,Clasificación,Marca,Modelo,Rango,Resolución,Sector,Usuario,Fecha_alta) VALUES "
                    + "('" +codigoInst+"','"+numSerieTF.getText()+"','"+descripcionInst+"','"+clasificacionInst+"','"+marcaInst+"','"+modeloTF.getText()+"','"+rangoInst+"','"+resolucionInst+"','"
                    +sectorInst+"','"+usuarioInst+"',NULL)";
                }else{
                    sql = "INSERT INTO Calibracion(Código,Num_serie,Descripción,Clasificación,Marca,Modelo,Rango,Resolución,Sector,Usuario,Fecha_alta) VALUES "
                    + "('" +codigoInst+"','"+numSerieTF.getText()+"','"+descripcionInst+"','"+clasificacionInst+"','"+marcaInst+"','"+modeloTF.getText()+"','"+rangoInst+"','"+resolucionInst+"','"
                    +sectorInst+"','"+usuarioInst+"','"+ddmmyyyy+"')";
                }
                
                
                try {
                    sentencia.executeUpdate(sql);
                    log.logNuevo(codigoInst, usuario);
                    JOptionPane.showMessageDialog(null, "Instrumento ingresado correctamente");
                } catch (SQLException ex) {
                    if(ex.getSQLState().equals("23505"))
                        JOptionPane.showMessageDialog(null, "Código duplicado", "Error", 0, null);
                    else if(ex.getErrorCode() == -3407)
                        JOptionPane.showMessageDialog(null, "Fecha invalida. Ingrese fecha con formato dd/mm/aaaa");
                    else
                        Logger.getLogger(VentPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            catch(ParseException ex) {
                JOptionPane.showMessageDialog(null, "Fecha invalida. Ingrese fecha con formato dd/mm/aaaa");

            }

        }
    }//GEN-LAST:event_guardarBActionPerformed

    private void nuevoBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoBActionPerformed
        codigoTF.setText("");
        descripcionTF.setText("");
        clasificacionTF.setText("");
        marcaTF.setText("");
        rangoTF.setText("");
        resolucionTF.setText("");
        sectorTF.setText("");
        usuarioTF.setText("");
        fechaAltaTF.setText("");

    }//GEN-LAST:event_nuevoBActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed

        sql =  "SELECT Calibracion.Código,V.Num_informe,Calibracion.Num_serie, Calibracion.Descripción, Calibracion.Marca,Calibracion.Modelo, Calibracion.Rango,V.Intervino, "
        + "V.Resultado_ult_confirmación, V.Fecha_ultima_cert_ext, V.[Fecha_prox_cert], V.Vencimiento "
        + "FROM Calibracion JOIN VERIFICACIÓN AS V ON Calibracion.Código = V.[Código] WHERE V.[Fecha_prox_cert] < Date()+30 "
        + "AND Calibracion.[Código] NOT IN (SELECT Baja.[Código] FROM Baja) AND V.fecha_prox_cert IN (SELECT MAX(fecha_prox_cert) FROM Verificación AS V1 WHERE V1.Código = calibracion.Código)"
        + "GROUP BY  Calibracion.Código, Calibracion.Descripción, Calibracion.Clasificación, Calibracion.Marca, Calibracion.Rango, Calibracion.Resolución, Calibracion.Sector, Calibracion.Usuario, Calibracion.Fecha_alta, V.Num_informe, V.Inst_calibracion, V.Criterio_aceptación, V.Resultado_ult_confirmación, V.Intervino, V.Fecha_ultima_cert_ext, V.Fecha_prox_cert, V.Frecuencia_cert, V.Vencimiento;";

        PreparedStatement pstm;
        try {
            pstm = conexion.prepareStatement(sql);
            ResultSet res = pstm.executeQuery();
            jTable2 = manejoTablas.agregarTuplasATabla(res,jTable2,REFRESH);
            jTable2 = manejoTablas.resizeTable(jTable2);

        }
        catch(SQLException ex){
            Logger.getLogger(VentPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_refreshButtonActionPerformed
    
    
    
    
    
    private void abrirLogin(){
        frame.setEnabled(false);
        Login login = new Login(frame);
        login.setVisible(true);
        login.setLocationRelativeTo(null);
    }
    
    private void cambiarPass(VentPrincipal o){
        o.setEnabled(false);
        CambiarPass cambio = new CambiarPass(o);
        cambio.setVisible(true);
        cambio.setLocationRelativeTo(null);
        o.toBack();
    }
    
    
    private void cerrar(VentPrincipal o){
        o.setEnabled(false);
        CloseWindows c = new CloseWindows(o);
        c.setVisible(true);
        c.setLocationRelativeTo(null);        
    }
    
    public void conectarBaseDatos() {
        try {
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver"); //Linea que carga el driver
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Error al cargar Driver");
        }
        try {
            conexion = DriverManager.getConnection("jdbc:ucanaccess://\\\\servidor-bk\\Shared\\Calidad\\Calidad\\03-Calibración\\Calibracion.accdb");
            //En esta parte tenemos que cambiar la ruta en la que se encuentra nuestra base de datos 
            //Ejemplo "jdbc:ucanaccess://C:\\Proyecto.accdb" hace referencia que esta en el disco local C
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error en la dirección de la base de datos");
            System.exit(0);
        }
        try {
            sentencia = conexion.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al crear la conexión con la base de datos");
            System.exit(0);           
        }
    }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        frame = new VentPrincipal();
        frame.abrirLogin();
        frame.pestañaTabbedPane.setVisible(false);
        
        java.awt.EventQueue.invokeLater(() -> {
            frame.setVisible(true);
        });
        
        frame.setLocationRelativeTo(null);
    }
    
    
    private final Log log;
    static final int REFRESH = 1;
    static final int BUSCAR = 2;
    static final int BAJA = 3;
    private final ManejoTablas manejoTablas;
    private boolean baja = false;
    public String usuario;
    public String contraseña;
    public String nivel;
    public String sql;
    public Statement sentencia;
    public Connection conexion;
    private static VentPrincipal frame;
    private String codigoInst;
    private String descripcionInst;
    private String clasificacionInst;
    private String marcaInst;
    private String rangoInst;
    private String resolucionInst;
    private String sectorInst;
    private String usuarioInst;
    private String fechaAltaInst;
    private boolean bajaCheck = false;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton abrirButton;
    private javax.swing.JCheckBox bajaCheckBox;
    private javax.swing.JCheckBox bajaCheckbox;
    private javax.swing.JButton buscarButton;
    private javax.swing.JTextField buscarTextField;
    private javax.swing.JMenuItem cambiarPassMenuItem;
    private javax.swing.JMenuItem cerrarSesionMenuItem;
    private javax.swing.JLabel clasificacionLbl;
    private javax.swing.JLabel clasificacionLbl1;
    private javax.swing.JTextField clasificacionTF;
    private javax.swing.JTextField codigoBajaTF;
    private javax.swing.JTextField codigoConfMetrTF;
    private javax.swing.JLabel codigoLbl;
    private javax.swing.JLabel codigoLbl1;
    private javax.swing.JLabel codigoLbl2;
    private javax.swing.JTextField codigoTF;
    private javax.swing.JButton confirmarBajaButton;
    private javax.swing.JTextField criterioAcepTF;
    private javax.swing.JLabel descripcionLbl;
    private javax.swing.JLabel descripcionLbl1;
    private javax.swing.JTextField descripcionTF;
    private javax.swing.JLabel fechaAltaLbl;
    private javax.swing.JLabel fechaAltaLbl1;
    private javax.swing.JLabel fechaAltaLbl2;
    private javax.swing.JTextField fechaAltaTF;
    private javax.swing.JTextField fechaBajaTF;
    private javax.swing.JTextField fechaCertifTF;
    private javax.swing.JLabel fechaLabel;
    private javax.swing.JTextField fechaProxCertTF;
    private javax.swing.JTextField frecuenciaTF;
    private javax.swing.JButton guardarButton;
    private javax.swing.JButton guardarVerifButton;
    private javax.swing.JTextField incertCodigoTF;
    private javax.swing.JTextField instruccionConfTF;
    private javax.swing.JTextField intervinoTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelBaja;
    private javax.swing.JPanel jPanelBsucar;
    private javax.swing.JPanel jPanelInstVencidos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel marcaLbl;
    private javax.swing.JLabel marcaLbl1;
    private javax.swing.JLabel marcaLbl2;
    private javax.swing.JTextField marcaTF;
    private javax.swing.JTextField modeloTF;
    private javax.swing.JButton nuevoButton;
    private javax.swing.JTextField numInformeTF;
    private javax.swing.JTextField numSerieTF;
    public javax.swing.JTabbedPane pestañaTabbedPane;
    private javax.swing.JLabel rangoLbl;
    private javax.swing.JLabel rangoLbl1;
    private javax.swing.JTextField rangoTF;
    private javax.swing.JButton refreshButton;
    private javax.swing.JLabel resolucionLbl;
    private javax.swing.JLabel resolucionLbl1;
    private javax.swing.JTextField resolucionTF;
    private javax.swing.JTextField resultadoTF;
    private javax.swing.JLabel sectorLbl;
    private javax.swing.JLabel sectorLbl1;
    private javax.swing.JTextField sectorTF;
    private javax.swing.JLabel usuarioLbl;
    private javax.swing.JLabel usuarioLbl1;
    public javax.swing.JLabel usuarioLogedLabel;
    private javax.swing.JTextField usuarioTF;
    // End of variables declaration//GEN-END:variables

    
}
